# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Terraform Duchy'

on:
  push:
    branches: [ "terraform-duchy" ]
  pull_request:

env:
  GCP_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Duchy image build and push'
    runs-on: ubuntu-20.04
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Setting up GCP account Connection'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      # Clone the repositories
      - name: Clone repositories
        run: |
          cd /tmp
          echo "Cloning the cross-media-measurement repository"
          git clone -b main https://github.com/world-federation-of-advertisers/cross-media-measurement.git
          cd cross-media-measurement   

      # Build the image
      - name: Build Bazel image
        working-directory: /tmp/cross-media-measurement
        run: |
          mkdir -p src/main/docker
          cd src/main/docker
          cd ../..
          bazel query 'filter("push_duchy", kind("container_push", //src/main/docker:all))' |
          xargs -I{} sh -c 'bazel build {} &&
            docker tag $(bazel info bazel-bin)/{}:latest docker.pkg.github.com/wfa-siyengar/terraform-gcp-wfa-kingdom/{}:latest &&
            docker push docker.pkg.github.com/wfa-siyengar/terraform-gcp-wfa-kingdom/{}:latest' -- --define container_registry=docker.pkg.github.com --define image_name=push_duchy --define docker_build_args="--build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
      # Login to GCR
    #  - name: Login to GCR
     #   run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      # Push the image
      #- name: Push Bazel image
       # run: bazel run //bazel:push_bazel_image --define=wfa-siyengar --define=image_tag=build-0001
