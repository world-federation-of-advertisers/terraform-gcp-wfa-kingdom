# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'K8s manifest Kingdom'

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      # Authenticate with GCP using a service account key
      - name: 'Setting up GCP account Connection'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup the SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # clone the cmm repo
      - name: Clone repositories
        run: |
          cd /tmp
          echo "Cloning the cross-media-measurement repository"
          git clone -b main https://github.com/world-federation-of-advertisers/cross-media-measurement.git
          cd cross-media-measurement    

      # Create k8s manifest
      - name: Build K8s manifest
        working-directory: /tmp/cross-media-measurement
        run: |
          bazel build //src/main/k8s/dev:kingdom_gke \
          --define=k8s_kingdom_secret_name=certs-and-configs-abcdedg \
          --define image_tag=build-0001

      # Deploy the manifest
      - name: Deploy K8s manifest
        run: |
          kubectl apply -f bazel-bin/src/main/k8s/dev/kingdom_gke.yaml

      # To check all the kingdom components has been deployed
      - name: Get deployments
        run: |
          kubectl get deployments

      # To check the services
      - name: Get services
        run: |
          kubectl get services
